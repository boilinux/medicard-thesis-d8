{#
/**
 * @file
 * Default theme implementation to display the basic html structure of a single
 * Drupal page.
 *
 * Variables:
 * - $css: An array of CSS files for the current page.
 * - $language: (object) The language the site is being displayed in.
 *   $language->language contains its textual representation.
 *   $language->dir contains the language direction. It will either be 'ltr' or
 *   'rtl'.
 * - $rdf_namespaces: All the RDF namespace prefixes used in the HTML document.
 * - $grddl_profile: A GRDDL profile allowing agents to extract the RDF data.
 * - $head_title: A modified version of the page title, for use in the TITLE
 *   tag.
 * - $head_title_array: (array) An associative array containing the string parts
 *   that were used to generate the $head_title variable, already prepared to be
 *   output as TITLE tag. The key/value pairs may contain one or more of the
 *   following, depending on conditions:
 *   - title: The title of the current page, if any.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site, if any, and if there is no title.
 * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
 *   so on).
 * - $styles: Style tags necessary to import all CSS files for the page.
 * - $scripts: Script tags necessary to load the JavaScript files and settings
 *   for the page.
 * - $page_top: Initial markup from any modules that have altered the
 *   page. This variable should always be output first, before all other dynamic
 *   content.
 * - $page: The rendered page content.
 * - $page_bottom: Final closing markup from any modules that have altered the
 *   page. This variable should always be output last, after all other dynamic
 *   content.
 * - $classes String of classes that can be used to style contextually through
 *   CSS.
 *
 * @ingroup templates
 *
 * @see bootstrap_preprocess_html()
 * @see template_preprocess()
 * @see template_preprocess_html()
 * @see template_process()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'page-node-type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
    theme.settings.navbar_position ? 'navbar-is-' ~ theme.settings.navbar_position,
    theme.has_glyphicons ? 'has-glyphicons',
    not logged_in ? 'login',
  ]
%}
<!DOCTYPE html>
<html {{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
  </head>
  <body{{ attributes.addClass(body_classes) }}>
    <a href="#main-content" class="visually-hidden focusable skip-link">
      {{ 'Skip to main content'|t }}
    </a>
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">
    {% if not logged_in %}
      <script>
        (function($) {
          $(document).ready(function() {
            Metronic.init(); // init metronic core components
            Layout.init(); // init current layout
            Login.init();
          });
        }) (jQuery);
      </script>
    {% else %}
      <script>
        (function($) {
          $(document).ready(function() {
            Metronic.init(); // init metronic core componets
            Layout.init(); // init layout
            Demo.init(); // init demo(theme settings page)
            QuickSidebar.init(); // init quick sidebar
            Tasks.initDashboardWidget(); // init tash dashboard widget
            UIToastr.init();

            toastr.options = {
              "closeButton": false,
              "debug": false,
              "positionClass": "toast-top-full-width",
              "onclick": null,
              "showDuration": "1000",
              "hideDuration": "1000",
              "timeOut": "20000",
              "extendedTimeOut": "20000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            };

            // if (Morris.EventEmitter) {
            //     // Use Morris.Area instead of Morris.Line
            //     dashboardMainChart = Morris.Area({
            //         element: 'sales_statistics',
            //         padding: 0,
            //         behaveLikeLine: false,
            //         gridEnabled: false,
            //         gridLineColor: false,
            //         axes: false,
            //         fillOpacity: 1,
            //         data: [{
            //             period: '2017-09-20',
            //             sales: 1400,
            //             profit: 4001
            //         }, {
            //             period: '2017-09-21',
            //             sales: 1100,
            //             profit: 600
            //         }, {
            //             period: '2017-09-22',
            //             sales: 1600,
            //             profit: 500
            //         }, {
            //             period: '2017-09-23',
            //             sales: 1200,
            //             profit: 400
            //         }, {
            //             period: '2017-09-24',
            //             sales: 1200,
            //             profit: 400
            //         }, {
            //             period: '2017-09-25',
            //             sales: 1550,
            //             profit: 800
            //         }],
            //         lineColors: ['#399a8c', '#92e9dc'],
            //         xkey: 'period',
            //         ykeys: ['sales', 'profit'],
            //         labels: ['Sales', 'Profit'],
            //         pointSize: 0,
            //         lineWidth: 0,
            //         hideHover: 'auto',
            //         resize: true
            //     });

            // }

            {{ custom_general_activity_message()|raw }}
          });
        }) (jQuery);
      </script>
    {% endif %}
  </body>
</html>
